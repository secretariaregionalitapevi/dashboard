# Generated by Django 5.2.5 on 2025-09-04 18:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccessLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="Nome"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "level_order",
                    models.IntegerField(unique=True, verbose_name="Ordem do Nível"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Nível de Acesso",
                "verbose_name_plural": "Níveis de Acesso",
                "db_table": "access_levels",
                "ordering": ["level_order"],
            },
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Nome"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                ("module", models.CharField(max_length=50, verbose_name="Módulo")),
                ("action", models.CharField(max_length=50, verbose_name="Ação")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Permissão",
                "verbose_name_plural": "Permissões",
                "db_table": "permissions",
                "ordering": ["module", "action"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Nome")),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Sobrenome"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Telefone"
                    ),
                ),
                (
                    "church_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Código da Igreja"
                    ),
                ),
                (
                    "church_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Nome da Igreja"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Verificado"),
                ),
                ("is_staff", models.BooleanField(default=False, verbose_name="Staff")),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="Superusuário"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Último Login"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "access_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ColorAdminApp.accesslevel",
                        verbose_name="Nível de Acesso",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
                "db_table": "users",
                "ordering": ["first_name", "last_name"],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_token",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Token da Sessão"
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Expira em")),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Endereço IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativa")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sessão de Usuário",
                "verbose_name_plural": "Sessões de Usuário",
                "db_table": "user_sessions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AccessLog",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("action", models.CharField(max_length=100, verbose_name="Ação")),
                (
                    "module",
                    models.CharField(blank=True, max_length=50, verbose_name="Módulo"),
                ),
                (
                    "resource_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID do Recurso"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Endereço IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                ("success", models.BooleanField(default=True, verbose_name="Sucesso")),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Mensagem de Erro"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Acesso",
                "verbose_name_plural": "Logs de Acesso",
                "db_table": "access_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AccessLevelPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "granted",
                    models.BooleanField(default=True, verbose_name="Concedida"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "access_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ColorAdminApp.accesslevel",
                        verbose_name="Nível de Acesso",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ColorAdminApp.permission",
                        verbose_name="Permissão",
                    ),
                ),
            ],
            options={
                "verbose_name": "Permissão por Nível",
                "verbose_name_plural": "Permissões por Nível",
                "db_table": "access_level_permissions",
                "unique_together": {("access_level", "permission")},
            },
        ),
    ]
